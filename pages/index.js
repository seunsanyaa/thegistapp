import Head from 'next/head'
// import Image from 'next/image'
// import styles from '../styles/Home.module.css'
import NavBar from "../components/Navbar/navbar";
import Hero from "../components/Hero/hero";
import AudioCharts from "../components/AudioChats/audiochats";
import Listen from "../components/Listen/listen";
import LiveRooms from "../components/LiveRooms/liverooms";
import NewFriends from "../components/NewFriends/newfriends";
import DownloadApp from "../components/DownloadApp/downloadapp";
import Footer from "../components/Footer/footer";
import {useEffect, useRef, useState} from "react";

import { gsap, Linear } from 'gsap'


import  ScrollTrigger  from "gsap/dist/ScrollTrigger";
import { ExpoScaleEase } from "gsap/dist/EasePack";
import CustomEase from 'gsap/dist/CustomEase'
import Scrollbar from 'smooth-scrollbar';
gsap.registerPlugin(ExpoScaleEase,CustomEase, Linear,Scrollbar, ScrollTrigger);
import "uikit/dist/js/uikit.min.js";


export default function Home() {


    let background = useRef();
    let q = gsap.utils.selector(background);
    const tl = useRef();

    let major = useRef();
    const containerRef = useRef(null)



    useEffect(() => {


        const GSAP = require("gsap/dist/CSSRulePlugin");
        const { CSSRulePlugin } = GSAP;
        gsap.registerPlugin(CSSRulePlugin);
        // uses el.current.querySelectorAll() internally

        // const scroller = document.querySelector('.viewport');

        //
        // const bodyScrollBar = Scrollbar.init(document.querySelector('.mainbg'), { damping: 0.1, delegateTo: document, alwaysShowTracks: true });
        //
        // ScrollTrigger.scrollerProxy(document.querySelector('.mainbg'), {
        //     scrollTop(value) {
        //         if (arguments.length) {
        //             bodyScrollBar.scrollTop = value; // setter
        //         }
        //         return bodyScrollBar.scrollTop;    // getter
        //     },
        //     getBoundingClientRect() {
        //         return {top: 0, left: 0, width: window.innerWidth, height: window.innerHeight};
        //     }
        // });
        // bodyScrollBar.addListener(ScrollTrigger.update);
        //
        // ScrollTrigger.defaults({ scroller:document.querySelector('.mainbg') });
        //


        //
        // let bodyScrollBar = Scrollbar.init(document.body, { damping: 0.1, delegateTo: document });
        //
        //
        // bodyScrollBar.setPosition(0, 0);
        // bodyScrollBar.track.xAxis.element.remove();
        //
        // ScrollTrigger.scrollerProxy(document.body, {
        //     scrollTop(value) {
        //         if (arguments.length) {
        //             bodyScrollBar.scrollTop = value;
        //         }
        //         return bodyScrollBar.scrollTop;
        //     }
        // });
        //
        // bodyScrollBar.addListener(ScrollTrigger.update);


        const scroller = document.querySelector('.scroller');
        const bodyScrollBar = Scrollbar.init(scroller, { damping: 0.1, delegateTo: document, alwaysShowTracks: true });


        ScrollTrigger.scrollerProxy(".scroller", {
            scrollTop(value) {
                if (arguments.length) {
                    bodyScrollBar.scrollTop = value;
                }
                return bodyScrollBar.scrollTop;
            }
        });

        bodyScrollBar.addListener(ScrollTrigger.update);

        ScrollTrigger.defaults({ scroller: scroller });



        let mainbg = CSSRulePlugin.getRule(".hero");

        gsap.fromTo([background.current],
            2, {scale:1.2, autoAlpha:0},
            {scale:1, autoAlpha:1, ease:ExpoScaleEase.config(1.2, 1, CustomEase.create("custom", "M0,0 C0,0 0.06612,-0.00069 0.105,0.00463 0.13557,0.00882 0.15735,0.01361 0.185,0.02533 0.21427,0.03773 0.23495,0.05027 0.26,0.0703 0.28674,0.0917 0.30294,0.10989 0.325,0.13731 0.34837,0.16636 0.36089,0.1866 0.38,0.21949 0.40135,0.25624 0.41346,0.27844 0.43,0.31803 0.497,0.47845 0.52752,0.57771 0.595,0.73428 0.61144,0.77243 0.62657,0.79424 0.65,0.8285 0.67045,0.85841 0.68506,0.87712 0.71,0.90244 0.73103,0.9238 0.74749,0.93696 0.7725,0.95289 0.79397,0.96656 0.81073,0.97423 0.835,0.98203 0.86192,0.99069 0.88118,0.99395 0.91,0.99708 0.94392,1.00078 1,1 1,1 "))});


       gsap.to([background.current], 20, {
            backgroundPosition: "-2247px 0px",
            delay:2,
            repeat: -1,
            //autoRound:false,
            ease: Linear.easeNone
        });

        // animme.restart();




    },[]);

    return (



        <div className="background">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
<main className="scroller">

        <div className="mainbg">
<div className="hero" ref={background}></div>
    <NavBar/>

    <Hero/>


</div>

        <AudioCharts/>

        <Listen/>

        <LiveRooms/>

        <NewFriends/>

        <DownloadApp/>

        <Footer/>

</main>

    </div>




  )
}
